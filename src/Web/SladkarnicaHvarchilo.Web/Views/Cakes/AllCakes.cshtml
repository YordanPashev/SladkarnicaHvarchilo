@using SladkarnicaHvarchilo.Common
@using SladkarnicaHvarchilo.Web.ViewModels.CakePiecesInfo;
@using SladkarnicaHvarchilo.Web.ViewModels.Cakes;

@model AllCakesViewModel

@{
    this.ViewData["Title"] = "Торти";
}

@if (this.ViewBag.UserMessage != null)
{
    <h1 class="userInfoMessage">
        @this.ViewBag.UserMessage
    </h1>
}
<h1 class="dessertTitle text-center"><strong>@this.ViewData["Title"]</strong></h1>


<div class="container contentSection zoomAnimationNoDelay mt-4">

    @if (this.Model.Cakes.Length > 0)
    {
        <style>
        </style>
        <form method="get" asp-controller="Cakes" asp-action="AllCakes" autocomplete="off">
            <div class="searchDessertSection fallDownAnimationSmallDelay">
                <div class="searchDessertText">
                    @if (this.Model.SearchQuery == null)
                    {
                        <input type="text" id="SearchQuery" name="SearchQuery" placeholder="Въведи име на торта" />
                    }
                    else
                    {
                        <input type="text" id="SearchQuery" name="SearchQuery" value="@this.Model.SearchQuery" placeholder="Въведи име на торта" />
                    }
                </div>
                <input type="hidden" name="SearchQuery" value="@this.Model.SearchQuery">
                <div class="searchDesserBtn">
                    <button onclick="this.form.submit()" name="SearchQuery" value="@this.Model.SearchQuery"><i class="fa-solid fa-magnifying-glass"></i></button>
                </div>
            </div>
            <div class="text-center mt-3 fallDownAnimationSmallDelay">
                @if (this.Model.SearchQuery != null)
                {
                    string searchedTypeNoun = this.Model.Cakes.Length == 1 ? "торта" : "торти";
                    <p class="searchDessertResultText">Резултат: @this.Model.Cakes.Length @searchedTypeNoun</p>
                }
            </div>
            <style>
                .orderBySection {
                    z-index: 2 !important
                }

                .orderByDropDownBtn {
                    background-color: transparent !important;
                    border-color: transparent !important;
                    color: black !important;
                    font-size: 1.2em !important;
                    font-weight: bold !important;
                }

                .orderByDropDownBtn:hover {
                    background-color: rgba(240, 240, 240, 0.97) !important;
                }

                .orderByDropDownBtn:focus {
                    background-color: rgba(220, 220, 220, 0.97) !important;
                }

                .orderByDropDownLayout {
                    display: none;
                    z-index: 2 !important;
                    width: 12em !important;
                    background-color: rgba(220, 220, 220, 0.97) !important;
                    border-color: transparent !important;
                    animation: fallDownAnimationNoDelay !important;
                }

                .orderByDropDownBtn:focus .orderByDropDownLayout {
                     animation: fallDownAnimationNoDelay !important;
                     display: block !important;
                }

                .orderByDropDownText {
                    z-index: 2 !important;
                    color: black;
                    border-color: transparent;
                    outline: none !important;
                }

                .orderByDropDownText:hover {
                    background-color: darkgray !important;
                    color: white !important;
                }
            </style>
            <div class="fallDownAnimationSmallDelay mb-5">
                <div class="dropdown">
                    <button class="btn dropdown-toggle orderByDropDownBtn" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                        Подреди по
                    </button>
                    <ul class="dropdown-menu orderByDropDownLayout" aria-labelledby="dropdownMenuButton1">
                        @foreach (string orderCriteria in this.Model.OrderCriteria)
                        {
                            <li>
                                <button class="btn m-auto orderByDropDownText" onclick="this.form.submit()" name="selectedOrderCriteria" value="@orderCriteria">@orderCriteria</button>
                            </li>
                        }
                    </ul>
                    <input type="hidden" name="selectedOrderCriteria" value="@Model.SelectedOrderCriteria">
                </div>
            </div>
        </form>
        <div class="allCakesInfoSection" style="z-index: -1 !important">
            @foreach (var cake in this.Model.Cakes)
            {
                <a class="cakeShortInfoSection" asp-action="CakeDetails" asp-controller="Cakes" asp-route-id="@cake.Id">
                    <img class="card cakeShortInfoPhoto mt-2" style="z-index: -1 !important" src="~/img/Cakes/@cake.ImageFileDirectoryPath" alt="No Image">
                    <p class="card-title cakeShortInfoNameText zoomAnimationSmallDelay">@cake.Name</p>
                    @foreach (PriceInfoViewModel priceInfo in cake.PriceInfo)
                    {
                        <p class="cakeShortInfoPriceText mb-2 zoomAnimationMediumDelay"><text class="regularFontText">@priceInfo.FormatedPrice лв.</text> за <text class="regularFontText">@priceInfo.Pieces</text> парчета</p>
                    }
                </a>
            }
        </div>
    }
    else
    {
        <p class="text-center">Не са открити торти</p>
    }

    @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
    {
        <div class="addDessertBtnMargin text-center">
            <a class="btn btn-success" asp-area="Administration" asp-controller="Cakemanager" asp-action="AddNewCake">Добави торта</a>
        </div>
    }
</div>


