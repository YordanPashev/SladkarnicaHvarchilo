@using SladkarnicaHvarchilo.Common
@using SladkarnicaHvarchilo.Web.ViewModels.CakePiecesInfo;
@using SladkarnicaHvarchilo.Web.ViewModels.Cakes;

@model AllCakesViewModel

@{
    this.ViewData["Title"] = "Торти";
}

@if (this.ViewBag.UserMessage != null)
{
    <h1 class="userInfoMessage">
        @this.ViewBag.UserMessage
    </h1>
}

<h1 class="text-center"><strong>@this.ViewData["Title"]</strong></h1>

<div class="contentSection zoomAnimationNoDelay">

    @if (this.Model.Cakes.Length > 0)
    {
        <form method="get" asp-controller="Cakes" asp-action="AllCakes" autocomplete="off">
            <div class="container mt-2 fallDownAnimationSmallDelay">
                <div class="row align-items-start">
                    <div class="col-md-4 justify-content-start">
                    </div>
                    <div class="col-md-4 justify-content-start">
                        <div class="input-group">
                            @if (this.Model.SearchQuery == null)
                            {
                                <input style="font-size: 15pt" type="text" id="SearchQuery" name="SearchQuery" class="form-control" placeholder="Въведи име на торта" />
                            }
                            else
                            {
                                <input style="font-size: 15pt" type="text" id="SearchQuery" name="SearchQuery" class="form-control" value="@this.Model.SearchQuery" />
                            }
                            <input type="hidden" name="SearchQuery" value="@this.Model.SearchQuery">
                            <div class="input-group-btn">
                                <button class="btn btn-success m-auto" style="font-size: 15pt" onclick="this.form.submit()" name="SearchQuery" value="@this.Model.SearchQuery">Търси</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row align-items-start fallDownAnimationSmallDelay">
                <div class="col-md-5 justify-content-start">
                    <div class="navbar">
                        <div class="dropdown">
                            <button class="btn dropdown-toggle" style="color: white; font-size: 16pt; font-weight: bold; background: rgba(71, 90, 54, 0.7); backdrop-filter: blur(15px); border-color: transparent;" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                                Подреди по
                            </button>
                            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1" style="font-size: 16pt; background: rgba(71, 90, 54, 0.7); backdrop-filter: blur(15px); width: 200px; font-size: 14pt;">
                                @foreach (string orderCriteria in this.Model.OrderCriteria)
                                {
                                    <li>
                                        <button class="btn m-auto" style="color: white; background-color: transparent" onclick="this.form.submit()" name="selectedOrderCriteria" value="@orderCriteria">@orderCriteria</button>
                                    </li>
                                }
                            </ul>
                            <input type="hidden" name="selectedOrderCriteria" value="@Model.SelectedOrderCriteria">
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mt-3 justify-content-start">
                    @if (this.Model.SearchQuery != null)
                    {
                        string searchedTypeNoun = this.Model.Cakes.Length == 1 ? "торта" : "торти";
                        <h3 style="width: 75%; font-style: italic; font-weight: bold; background-color: antiquewhite;">Намерени са @this.Model.Cakes.Length @searchedTypeNoun</h3>
                    }
                </div>
            </div>
        </form>
        <div class="container" style="display: flex; gap: 2em; text-align: center;">
            @foreach (var cake in this.Model.Cakes)
            {
                <a style="text-align: left; font-family: Nunito Regular; text-decoration: none; color: black;" asp-action="CakeDetails" asp-controller="Cakes" asp-route-id="@cake.Id">
                    <img class="card mt-2" style="width: 24.3rem; height: 15rem; border: none; border-radius: 1em; background-color: transparent;" src="~/img/Cakes/@cake.ImageFileDirectoryPath" alt="No Image">
                    <p class="card-title zoomAnimationSmallDelay" style="font-weight: bold; padding: 0.5em 0.2em; font-size: 1.5em;">@cake.Name</p>
                    @foreach (PriceInfoViewModel priceInfo in cake.PriceInfo)
                    {
                        <p class="mb-2 zoomAnimationMediumDelay" style="font-weight: bold; margin-top: -0.6em; padding: 0em 0.3em; font-family: Nunito ExtraLight; color: #4f4f4f !important;"><text style="font-family: Nunito Regular;">@priceInfo.FormatedPrice лв.</text> за <text style="font-family: Nunito Regular;">@priceInfo.Pieces</text> парчета</p>
                    }
                </a>
            }
        </div>
    }
    else
    {
        <h1 style="text-align: center">Не са открити торти</h1>
        <br />
    }

    @if (this.User.IsInRole(GlobalConstants.AdministratorRoleName))
    {
        <div class="bottomPageButtons text-center">
            <a class="btn btn-success mb-2" style="font-size: 16pt;  width: 20%;" asp-area="Administration" asp-controller="Cakemanager" asp-action="AddNewCake">Добави торта</a>
        </div>
    }
</div>


